#!/bin/sh

# update-translations <OKAPI> <TENANT> <OKAPIUSERNAME> <OKAPIPASSWORD>
# Or set environment variables $OKAPI $TENANT $OKAPIUSERNAME $OKAPIPASSWORD and
# call update-translations without arguments.

set -e

: ${OKAPI:=$1}
: ${OKAPI:=http://localhost:8081}
: ${TENANT:=$2}
: ${TENANT:=diku}
: ${OKAPIUSERNAME:=$3}
: ${OKAPIUSERNAME:=diku_admin}
: ${OKAPIPASSWORD:=$4}
: ${OKAPIPASSWORD:=admin}

TOKEN=$( curl -sS -D - -H "X-Okapi-Tenant: $TENANT" -H "Content-type: application/json" \
  -d "{\"tenant\":\"$TENANT\",\"username\":\"$OKAPIUSERNAME\",\"password\":\"$OKAPIPASSWORD\"}" \
  "$OKAPI/authn/login" \
  | grep -i "^x-okapi-token: " | tr -d "\n\r" )

echo "TOKEN=$TOKEN"

process ()
{
  notranslation=0
  unchanged=0
  updated=0
  while read line
  do
    if [ -z "$line" ]
    then
      continue
    fi
    id=$(echo "$line" | cut -f 1)
    newname=$(echo "$line" | cut -f 3)
    if [ "x$newname" = "x" ]
    then
      notranslation=$(( notranslation + 1 ))
      continue
    fi
    json=$(curl --dump-header dump-header -sS -H "X-Okapi-Tenant: $TENANT" -H "$TOKEN" "$OKAPI$1/$id")
    header=$(cat dump-header)
    rm dump-header
    if echo "$header" | head -1 | grep -q 404
    then
      echo "$OKAPI$1/$id not found on server"
      norecord=$(( norecord + 1 ))
      continue
    fi
    if echo "$header" | head -1 | grep -v -q 200
    then
      echo "$header"
      echo "$json"
      break
    fi
    oldname=$(echo "$json" | jq -r '.name')
    if [ "$oldname" = "$newname" ]
    then
      unchanged=$(( unchanged + 1 ))
      continue
    fi
    # The upload.json file is needed because curl for Windows incorrectly encodes
    # UTF-8 characters like umlauts when using -d "$json"
    echo "$json" | jq --arg newname "$newname" '.name=$newname' > upload.json
    curl -sS -H "X-Okapi-Tenant: $TENANT" -H "$TOKEN" -H "Content-Type: application/json" \
         -X PUT -d '@upload.json' "$OKAPI$1/$id"
    # rm upload.json
    updated=$(( updated + 1 ))
  done
  echo "$updated updated, $unchanged unchanged, $norecord without record, $notranslation without translation for $1"
}

process /alternative-title-types          < translated-files/alternative-title-types.tsv
process /contributor-types                < translated-files/contributor-types_codes.tsv
process /holdings-types                   < translated-files/holdings-types.tsv
process /instance-formats                 < translated-files/instance-formats.tsv
process /instance-note-types              < translated-files/instance-note-types.tsv
process /instance-types                   < translated-files/instance-types.tsv
process /modes-of-issuance                < translated-files/modes-of-issuance.tsv
process /material-types                   < translated-files/material-types.tsv
process /nature-of-content-terms          < translated-files/nature-of-content-terms.tsv
process /instance-statuses                < translated-files/instance-statuses.tsv
process /contributor-name-types           < translated-files/contributor-name-types.tsv
process /electronic-access-relationships  < translated-files/electronic-access-relationships.tsv
process /holdings-note-types              < translated-files/holdings-note-types.tsv
process /item-note-types                  < translated-files/item-note-types.tsv
process /identifier-types                 < translated-files/identifier-types.tsv
process /call-number-types                < translated-files/call-number-types.tsv
process /item-damaged-statuses            < translated-files/item-damaged-statuses.tsv
